name: dev

on:
    push:
        tags:
            - 'indev-*'


jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info-version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get modpack version
        id: info-version
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "name=version::$version" >> "$GITHUB_OUTPUT"
      - name: Get modpack name
        id: info-name
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "name=projectname::$projectname" >> "$GITHUB_OUTPUT"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

  build:
    name: Build Modpack
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download PAX
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Export modpack
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
  assets:
    name: upload assets
    runs-on: ubuntu-latest
    needs: [build, modpack-info]
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v3
      - name: Upload Release Asset
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload ${{ github.ref }} ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
  release-github:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, modpack-info]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}