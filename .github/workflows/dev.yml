name: dev

on:
    push:
        tags:
            - 'indev-*'

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get modpack info
        id: info
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "::set-output name=projectname::$projectname"
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "::set-output name=version::$version"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

  build:
    runs-on: ubuntu-latest
    needs: [modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download PAX
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Export modpack
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip

  release-github:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, modpack-info]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Download modpack
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Dev-Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: true
          files: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip