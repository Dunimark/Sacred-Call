name: dev

on:
    push:
        tags:
            - 'indev-*'
env:
    projectname: Sacred-Call
    mcversion: 1.19.2
    modpackversion: ${{ github.ref_name }}

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set minecraft version
        id: info-mcversion
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            mcversion=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "name=mcversion::$mcversion" >> $GITHUB_ENV
      - name: Set modpack name
        id: info-name
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "name=projectname::$projectname" >> $GITHUB_ENV
      - name: Set modpack version
        id: info-version
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            modpackversion=`echo $(jq -r '.version' <<< "$manifestjson")`
            echo "name=modpackversion::$modpackversion" >> $GITHUB_ENV
      - name: Get Env
        run: |
            echo "$projectname"
            echo "$mcversion"
            echo "$modpackversion"

  build:
    name: Build Modpack
    runs-on: ubuntu-latest
    needs: [modpack-info]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download PAX
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "froehlichA/pax"
          fileName: "pax"
          latest: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Export modpack
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: |
          mv .out/$projectname.zip .out/$projectname-$modpackversion.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.projectname }}-${{ env.modpackversion }}
          path: .out/${{ env.projectname }}-${{ env.modpackversion }}.zip
      - name: Upload Release Asset
        env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
           gh release upload ${{ github.ref }} ${{ env.projectname }}-${{ env.modpackversion }}.zip
#   assets:
#     name: upload assets
#     runs-on: ubuntu-latest
#     needs: [build, modpack-info]
#     permissions:
#       contents: write
#     steps:
#       - uses: actions/checkout@v3
#       - name: Upload Release Asset
#         env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run:
#           gh release upload ${{ github.ref }} ${{ env.projectname }}-${{ env.modpackversion }}.zip
  release-github:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, modpack-info]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
            files: ${{ env.projectname }}-${{ env.modpackversion }}.zip
      - name: Create Release
        run: gh release create  ${{ github.ref }} -d -p --generate-notes 
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}